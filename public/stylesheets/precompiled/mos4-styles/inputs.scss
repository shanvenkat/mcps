.aui {
  button:focus {
      outline: none;
  }
  
  .mos-button {
    text-transform: uppercase;
    border: none;

    .material-icons {
      font-size: 32px;
    }
  }

  .filled-button {
   	@extend .mos-button;
   	color: white;
   	border-radius: 100px;
   	padding: 8px 25px;
    font-family: 'Work Sans', sans-serif;
    font-size: 1rem;
    font-weight: bold;
    text-align: center;
    transition: transform .3s ease-in-out;

   	&.blue {
     	background-color: $light-blue;
     	border: solid 2px $light-blue;
      
      &:hover{
        background-color: $blue; 
      }
   	}

   	&.white{
     	background-color: white;
     	border: solid 3px $medium-grey;
     	color: $light-blue;
   	}
     
    &.red {
      background-color: $med-red;

      &:hover{
        background-color: $rouge-three;
      }
    }
  }

  .mos-radiobutton{
    @include flex;
    @include align-items(center);

    input{
      z-index: -1;
      opacity: 0;
    }

    .mos-indicator{
      border: solid 4px $medium-grey;
      background-color: white;
      width: 16px;
      height: 16px;
      border-radius: 50%;
    }

    /* Hover and focus states */
    &:hover input ~ .mos-indicator,
    & input:focus ~ .mos-indicator{
      background: $red;
    }

    /* Checked state */
    & input:checked ~ .mos-indicator {
      background: $red;
    }

    /* Hover state whilst checked */
    &:hover input:not([disabled]):checked ~ .mos-indicator,
    & input:checked:focus ~ .mos-indicator {
      background: $red;
    }

    /* Disabled state */
    & input:disabled ~ .mos-indicator {
        pointer-events: none;
        opacity: .6;
        background: $red;
    }
  }

  .close-beta-button {
    background: transparent;
    color: $red;
    outline: none;
  }
}
